<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.iss.edu.dao.UserDao">

    <select id="login" resultType="User">
        select
            id, username, nickname, password, phone, email, level, photo, introduction, role
        from user
        where (username = #{username} or phone = #{username} or email = #{username}) and password = #{password} and is_active = 1
    </select>

    <select id="getTeachers" resultType="Map">
        select id as value, nickname as label from user where role = 2 and is_active = 1
    </select>

    <select id="getUser" parameterType="java.lang.Integer" resultType="User">
        select id, username, nickname, password, phone, email, level, photo, introduction
        from user where id = #{id}
    </select>


    <!--  教师列表  -->
    <sql id="getPageSQL">
        select id, username, nickname, password, phone, email, level, photo, introduction, operator, last_update
        from user
        <where>
            <if test="queryValue != null and queryValue != ''">
                nickname like '%${queryValue}%'   <!--concat('%',#{queryValue},'%')-->
            </if>
            and role = 2 and is_active = 1
        </where>
    </sql>


    <select id="getPage" resultType="User">
        <include refid="getPageSQL"/>
        limit #{start}, #{pageSize}
    </select>

    <select id="getCount" resultType="java.lang.Integer">
        select count(*) from (
        <include refid="getPageSQL"/>
        ) u
    </select>

    <!-- 新增讲师 -->
    <insert id="insertUser" parameterType="User">
        insert into user
        (username, nickname, password, phone, email, level, photo, introduction)
        values
        (#{username}, #{nickname}, #{password}, #{phone}, #{email}, #{level}, #{photo}, #{introduction})
    </insert>


    <!-- 更新教师 -->
    <update id="updateUser" parameterType="User">
        update user
        <set>
            <if test="username != null and username !=''">
                username = #{username},
            </if>
            <if test="nickname != null and nickname !=''">
                nickname = #{nickname},
            </if>
            <if test="password != null and password !=''">
                password = #{password},
            </if>
            <if test="phone != null and phone !=''">
                phone = #{phone},
            </if>
            <if test="email != null and email !=''">
                email = #{email},
            </if>
            <if test="photo != null and photo !=''">
                photo = #{photo},
            </if>
            <if test="level != null and level !=''">
                level = #{level},
            </if>
            <if test="introduction != null and introduction !=''">
                introduction = #{introduction}
            </if>
        </set>
        <where>
            id = #{id}
        </where>
    </update>

    <!--  删除讲师  -->
    <update id="delete">
        update user set is_active = 0 where id = #{id}
    </update>

    <!--  批量删除讲师  -->
    <delete id="deletes">
        update user set is_active = 0 where id in
        <foreach collection="ids" open="(" separator="," close=")" item="id">
            #{id}
        </foreach>
    </delete>

    <select id="getTransfer" resultType="java.util.Map">
        select id as `key`, nickname as label, nickname as query from user where role = 2
    </select>


</mapper>